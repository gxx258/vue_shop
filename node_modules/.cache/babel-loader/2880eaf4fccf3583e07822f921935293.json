{"remainingRequest":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\thread-loader\\dist\\cjs.js!D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\babel-loader\\lib\\index.js!D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\CodePath\\项目实战\\code\\vue-shop2\\src\\components\\goods\\Add.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\src\\components\\goods\\Add.vue","mtime":1604060960136},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Add.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>添加商品</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片区域 -->\r\n    <el-card class=\"box-card\">\r\n      <!-- 提示区域 -->\r\n      <el-alert\r\n        title=\"添加商品信息\"\r\n        type=\"info\"\r\n        center\r\n        show-icon\r\n        :closable=\"false\"\r\n      >\r\n      </el-alert>\r\n      <!-- 步骤条区域 -->\r\n      <el-steps\r\n        :space=\"200\"\r\n        :active=\"activeIndex - 0\"\r\n        finish-status=\"success\"\r\n        align-center\r\n      >\r\n        <el-step title=\"基本信息\"></el-step>\r\n        <el-step title=\"商品参数\"></el-step>\r\n        <el-step title=\"商品属性\"></el-step>\r\n        <el-step title=\"商品图片\"></el-step>\r\n        <el-step title=\"商品内容\"></el-step>\r\n        <el-step title=\"完成\"></el-step>\r\n      </el-steps>\r\n      <!-- tab区域 -->\r\n      <el-form\r\n        :model=\"addForm\"\r\n        :rules=\"addFormRules\"\r\n        ref=\"addFormRef\"\r\n        label-width=\"100px\"\r\n        label-position=\"top\"\r\n      >\r\n        <!-- tab-click专属点击事件 -->\r\n        <el-tabs\r\n          :tab-position=\"'left'\"\r\n          v-model=\"activeIndex\"\r\n          :before-leave=\"beforeTabLeave\"\r\n          @tab-click=\"tabClicked\"\r\n        >\r\n          <el-tab-pane label=\"基本信息\" name=\"0\">\r\n            <el-form-item label=\"商品名称\" prop=\"goods_name\">\r\n              <el-input v-model=\"addForm.goods_name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品价格\" prop=\"goods_price\">\r\n              <el-input v-model=\"addForm.goods_price\" type=\"number\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品重量\" prop=\"goods_weight\">\r\n              <el-input v-model=\"addForm.goods_weight\" type=\"number\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品数量\" prop=\"goods_number\">\r\n              <el-input v-model=\"addForm.goods_number\" type=\"number\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品分类\" prop=\"goods_cat\">\r\n              <!-- 商品分类的级联选择器 -->\r\n              <el-cascader\r\n                expand-trigger=\"hover\"\r\n                v-model=\"addForm.goods_cat\"\r\n                :options=\"catelist\"\r\n                :props=\"cateProps\"\r\n                @change=\"handleChange\"\r\n              ></el-cascader>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <!-- 商品参数 -->\r\n          <el-tab-pane label=\"商品参数\" name=\"1\">\r\n            <!-- 渲染商品参数的表单项 -->\r\n            <el-form-item\r\n              :label=\"item.attr_name\"\r\n              v-for=\"item in manyTableData\"\r\n              :key=\"item.attr_id\"\r\n            >\r\n              <!-- 复选框组 -->\r\n              <el-checkbox-group v-model=\"item.attr_vals\">\r\n                <el-checkbox\r\n                  :label=\"item1\"\r\n                  v-for=\"(item1, i) in item.attr_vals\"\r\n                  :key=\"i\"\r\n                  border\r\n                ></el-checkbox>\r\n              </el-checkbox-group>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <!-- 商品属性 -->\r\n          <el-tab-pane label=\"商品属性\" name=\"2\">\r\n            <!-- 商品属性验证表单 -->\r\n            <el-form-item\r\n              :label=\"item.attr_name\"\r\n              v-for=\"item in onlyTableData\"\r\n              :key=\"item.attr_id\"\r\n            >\r\n              <el-input v-model=\"item.attr_vals\"></el-input>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <!-- 商品图片 -->\r\n          <el-tab-pane label=\"商品图片\" name=\"3\">\r\n            <!--\r\n               action 表示要上传的后台API \r\n              上传图片需要手动添加头文件:headers\r\n              -->\r\n            <el-upload\r\n              class=\"upload-demo\"\r\n              :action=\"uploadURL\"\r\n              :on-preview=\"handlePreview\"\r\n              :on-remove=\"handleRemove\"\r\n              list-type=\"picture\"\r\n              :headers=\"headerObj\"\r\n              :on-success=\"handleSuccess\"\r\n            >\r\n              <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n              <div slot=\"tip\" class=\"el-upload__tip\">\r\n                只能上传jpg/png文件，且不超过500kb\r\n              </div>\r\n            </el-upload>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"商品内容\" name=\"4\">\r\n              <quill-editor v-model=\"addForm.goods_introduce\"></quill-editor>\r\n          <el-button type=\"primary\" class=\"btnAdd\" @click=\"add\">添加商品</el-button>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </el-form>\r\n    </el-card>\r\n\r\n    <!-- 图片预览对话框 -->\r\n    <el-dialog title=\"图片预览\" :visible.sync=\"previewVisible\" width=\"50%\">\r\n      <img :src=\"previewPath\" alt=\"\" class=\"previewImg\">\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport _ from 'lodash'\r\nexport default {\r\n  data() {\r\n    return {\r\n      activeIndex: \"0\",\r\n      addForm: {\r\n        // 这个没定义的话 beforeTabLeave中会报错\r\n        goods_cat: [],\r\n        // 添加图片的数组\r\n        pics: [],\r\n      },\r\n      addFormRules: {\r\n        goods_name: [\r\n          { required: true, message: \"请输入商品名称\", trigger: \"blur\" },\r\n          { min: 3, max: 5, message: \"长度在 3 到 5 个字符\", trigger: \"blur\" },\r\n        ],\r\n        goods_price: [\r\n          { required: true, message: \"请输入商品价格\", trigger: \"blur\" },\r\n        ],\r\n        goods_weight: [\r\n          { required: true, message: \"请输入商品重量\", trigger: \"blur\" },\r\n        ],\r\n        goods_number: [\r\n          { required: true, message: \"请输入商品数量\", trigger: \"blur\" },\r\n        ],\r\n        goods_cat: [\r\n          { required: true, message: \"请选择商品分类\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      catelist: [],\r\n      cateProps: {\r\n        label: \"cat_name\",\r\n        value: \"cat_id\",\r\n        children: \"children\",\r\n      },\r\n      // 动态参数列表数据\r\n      manyTableData: [],\r\n      // 静态参数列表数据\r\n      onlyTableData: [],\r\n      uploadURL: \"http://127.0.0.1:8888/api/private/v1/upload\",\r\n      // 图片上传组件的headers请求头对象\r\n      headerObj: {\r\n        Authorization: window.sessionStorage.getItem(\"token\"),\r\n      },\r\n      previewPath: \"\",\r\n      //  默认图片预览的显示与隐藏\r\n      previewVisible: false,\r\n    };\r\n  },\r\n  created() {\r\n    this.getCateList();\r\n  },\r\n  computed: {\r\n    cateId() {\r\n      if (this.addForm.goods_cat.length === 3) {\r\n        return this.addForm.goods_cat[2];\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get(\"categories\");\r\n      if (res.meta.status !== 200)\r\n        return this.$message.error(\"获取商品分类数据失败\");\r\n      this.catelist = res.data;\r\n      //   console.log(this.catelist);\r\n    },\r\n    // 级联选择器中项发生变化就会触发这个函数\r\n    handleChange() {\r\n      if (this.addForm.goods_cat.length !== 3) {\r\n        this.addForm.goods_cat = [];\r\n      }\r\n    },\r\n    beforeTabLeave(activeName, oldActiveName) {\r\n      //   console.log(this.addForm.goods_cat.length);\r\n      if (oldActiveName === \"0\" && this.addForm.goods_cat.length !== 3) {\r\n        this.$message.error(\"请选择商品分类\");\r\n        return false;\r\n      }\r\n    },\r\n    async tabClicked() {\r\n      // console.log(this.activeIndex);\r\n      // 证明访问的是动态参数面板\r\n      if (this.activeIndex === \"1\") {\r\n        const { data: res } = await this.$http.get(\r\n          `categories/${this.cateId}/attributes`,\r\n          {\r\n            params: { sel: \"many\" },\r\n          }\r\n        );\r\n        if (res.meta.status !== 200)\r\n          return this.$message.error(\"获取动态列表数据失败\");\r\n        //  遍历数组将attr_vals属性转化为数组\r\n        res.data.forEach((item) => {\r\n          item.attr_vals = item.attr_vals ? item.attr_vals.split(\" \") : [];\r\n        });\r\n        this.manyTableData = res.data;\r\n        // console.log(res.data);\r\n      } else if (this.activeIndex === \"2\") {\r\n        const { data: res } = await this.$http.get(\r\n          `categories/${this.cateId}/attributes`,\r\n          {\r\n            params: { sel: \"only\" },\r\n          }\r\n        );\r\n        if (res.meta.status !== 200)\r\n          return this.$message.error(\"获取静态列表数据失败\");\r\n        // console.log(res.data);\r\n        this.onlyTableData = res.data;\r\n      }\r\n    },\r\n    // 处理图片预览的操作\r\n    handlePreview(file) {\r\n      this.previewPath = file.response.data.url;\r\n      this.previewVisible = true;\r\n    },\r\n    // 处理移出图片的操作\r\n    handleRemove(file) {\r\n      // 获取将要删除的图片的临时路径\r\n      const filePath = file.response.data.tmp_path;\r\n      // 从pics中找到这个图片对应的索引值\r\n      const i = this.addForm.pics.findIndex((x) => x.pic === filePath);\r\n      // 调用splice方法，把图片信息对象，从pics中移出\r\n      this.addForm.pics.splice(i, 1);\r\n      console.log(this.addForm);\r\n    },\r\n    // 监听图片上传成功的事件\r\n    handleSuccess(response) {\r\n      // console.log(response);\r\n      //1.拼接得到一个图片信息对象\r\n      const picInfo = { pic: response.data.tmp_path };\r\n      // 2.将图片信息对象，push到pics数组中\r\n      this.addForm.pics.push(picInfo);\r\n      console.log(this.addForm);\r\n    },\r\n    // 添加商品\r\n    add(){\r\n    //   this.$refs.addFormRef.validate(valid=>{\r\n    //       if(!valid)return this.$message.error('请填写必要的表单项')\r\n    //     //   执行添加的业务逻辑 深拷贝\r\n\r\n    //   })\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.previewImg{\r\n    width: 100%;\r\n}\r\n.btnAdd{\r\n\r\n    margin-top: 15px !important;\r\n}\r\n</style>"],"sourceRoot":"src/components/goods"}]}