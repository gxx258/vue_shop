{"remainingRequest":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\babel-loader\\lib\\index.js!D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\CodePath\\项目实战\\code\\vue-shop2\\src\\components\\report\\Report.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\src\\components\\report\\Report.vue","mtime":1604071076549},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRDovQ29kZVBhdGgvXHU5ODc5XHU3NkVFXHU1QjlFXHU2MjE4L2NvZGUvdnVlLXNob3AyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8gMS7lr7zlhaVlY2hhcnRzCmltcG9ydCBlY2hhcnRzIGZyb20gImVjaGFydHMiOwppbXBvcnQgXyBmcm9tICdsb2Rhc2gnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIC8vIOmcgOimgeWQiOW5tueahOaVsOaNrgogICAgICBvcHRpb25zOiB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICfnlKjmiLfmnaXmupAnCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsCiAgICAgICAgICBheGlzUG9pbnRlcjogewogICAgICAgICAgICB0eXBlOiAnY3Jvc3MnLAogICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNFOUVFRjMnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIGxlZnQ6ICczJScsCiAgICAgICAgICByaWdodDogJzQlJywKICAgICAgICAgIGJvdHRvbTogJzMlJywKICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IFt7CiAgICAgICAgICBib3VuZGFyeUdhcDogZmFsc2UKICAgICAgICB9XSwKICAgICAgICB5QXhpczogW3sKICAgICAgICAgIHR5cGU6ICd2YWx1ZScKICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIG15Q2hhcnQsIF95aWVsZCRfdGhpcyQkaHR0cCRnZSwgcmVzLCByZXN1bHQ7CgogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgLy8gMy7ln7rkuo7lh4blpIflpb3nmoREb23vvIzliJ3lp4vljJZlY2hhcnRz5a6e5L6LCiAgICAgICAgICAgICAgbXlDaGFydCA9IGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibWFpbiIpKTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGh0dHAuZ2V0KCdyZXBvcnRzL3R5cGUvMScpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIF95aWVsZCRfdGhpcyQkaHR0cCRnZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgcmVzID0gX3lpZWxkJF90aGlzJCRodHRwJGdlLmRhdGE7CgogICAgICAgICAgICAgIGlmICghKHJlcy5tZXRhLnN0YXR1cyAhPT0gMjAwKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIF90aGlzLiRtZXNzYWdlLmVycm9yKCfojrflj5bmipjnur/lm77mlbDmja7lpLHotKUnKSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgLy8gNC7mjIflrprlm77ooajnmoTphY3nva7pobnlkozmlbDmja4KICAgICAgICAgICAgICByZXN1bHQgPSBfLm1lcmdlKHJlcy5kYXRhLCBfdGhpcy5vcHRpb25zKTsgLy8gNe+8jOS9v+eUqOWImuaMh+WumueahOmFjee9rumhueWSjOaVsOaNruaYvuekuuWbvuihqOOAggoKICAgICAgICAgICAgICBteUNoYXJ0LnNldE9wdGlvbihyZXN1bHQpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["Report.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAiBA;AACA,OAAA,OAAA,MAAA,SAAA;AACA,OAAA,CAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AAAA,WAAA;AACA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAIA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA,MADA;AAEA,UAAA,WAAA,EAAA;AACA,YAAA,IAAA,EAAA,OADA;AAEA,YAAA,KAAA,EAAA;AACA,cAAA,eAAA,EAAA;AADA;AAFA;AAFA,SAJA;AAaA,QAAA,IAAA,EAAA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA,IAFA;AAGA,UAAA,MAAA,EAAA,IAHA;AAIA,UAAA,YAAA,EAAA;AAJA,SAbA;AAmBA,QAAA,KAAA,EAAA,CACA;AACA,UAAA,WAAA,EAAA;AADA,SADA,CAnBA;AAwBA,QAAA,KAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAxBA;AAFA,KAAA;AAgCA,GAjCA;AAkCA,EAAA,OAlCA,qBAkCA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA;AACA,cAAA,OAFA,GAEA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,cAAA,CAAA,MAAA,CAAA,CAFA;AAAA;AAAA,qBAIA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,gBAAA,CAJA;;AAAA;AAAA;AAIA,cAAA,GAJA,yBAIA,IAJA;;AAAA,oBAKA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GALA;AAAA;AAAA;AAAA;;AAAA,+CAKA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,WAAA,CALA;;AAAA;AAMA;AACA,cAAA,MAPA,GAOA,CAAA,CAAA,KAAA,CAAA,GAAA,CAAA,IAAA,EAAA,KAAA,CAAA,OAAA,CAPA,EAUA;;AACA,cAAA,OAAA,CAAA,SAAA,CAAA,MAAA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AA9CA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据统计</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据报表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片区域 -->\r\n\r\n    <!-- 2.为echarts设置宽高 -->\r\n    <el-card class=\"box-card\"\r\n      ><div id=\"main\" style=\"width: 1200px; height: 400px\"></div\r\n    ></el-card>\r\n  </div>\r\n</template>\r\n<script>\r\n// 1.导入echarts\r\nimport echarts from \"echarts\";\r\nimport _ from 'lodash'\r\nexport default {\r\n    data(){return{\r\n        // 需要合并的数据\r\n        options: {\r\n          title: {\r\n            text: '用户来源'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'cross',\r\n              label: {\r\n                backgroundColor: '#E9EEF3'\r\n              }\r\n            }\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n          xAxis: [\r\n            {\r\n              boundaryGap: false\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              type: 'value'\r\n            }\r\n          ]\r\n        }\r\n    }},\r\n async mounted() {\r\n    // 3.基于准备好的Dom，初始化echarts实例\r\n    var myChart = echarts.init(document.getElementById(\"main\"));\r\n\r\n   const{data:res}=await this.$http.get('reports/type/1')\r\n   if(res.meta.status!==200)return this.$message.error('获取折线图数据失败')\r\n    // 4.指定图表的配置项和数据\r\n   const result = _.merge(res.data,this.options)\r\n  \r\n\r\n    // 5，使用刚指定的配置项和数据显示图表。\r\n    myChart.setOption(result);\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"sourceRoot":"src/components/report"}]}