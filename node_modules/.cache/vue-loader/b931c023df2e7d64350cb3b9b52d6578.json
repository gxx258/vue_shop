{"remainingRequest":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\CodePath\\项目实战\\code\\vue-shop2\\src\\components\\goods\\Params.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\src\\components\\goods\\Params.vue","mtime":1604018192167},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Params.vue"],"names":[],"mappingsfile":"Params.vue","sourceRoot":"src/components/goods","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片区域 -->\r\n    <el-card class=\"box-card\">\r\n      <!-- 头部的警告区域  -->\r\n      <el-alert\r\n        title=\"注意 只允许第三级分类设置相关参数！\"\r\n        :closable=\"false\"\r\n        type=\"warning\"\r\n        show-icon\r\n      >\r\n      </el-alert>\r\n\r\n      <!-- 选中商品分类区域 -->\r\n      <el-row class=\"cat_opt\">\r\n        <el-col>\r\n          <span>选择商品分类：</span>\r\n          <!-- 级联选择框 -->\r\n          <el-cascader\r\n            expand-trigger=\"hover\"\r\n            v-model=\"selectedCateKeys\"\r\n            :options=\"catelist\"\r\n            :props=\"cateProps\"\r\n            @change=\"handleChange\"\r\n          ></el-cascader>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- tabs页签区域 -->\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\r\n        <!--动态参数面板  -->\r\n        <el-tab-pane label=\"动态参数\" name=\"many\">\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"mini\"\r\n            :disabled=\"isBtnDisablabled\"\r\n            @click=\"addDialogVisible = true\"\r\n            >添加参数</el-button\r\n          >\r\n          <!-- 动态数据表格 -->\r\n          <el-table :data=\"manyTableData\" border stripe>\r\n            <!-- 展开列 -->\r\n            <el-table-column type=\"expand\">\r\n              <template slot-scope=\"scope\">\r\n                <!-- 循环渲染tag标签 -->\r\n                <el-tag\r\n                  v-for=\"(item, i) in scope.row.attr_vals\"\r\n                  :key=\"i\"\r\n                  closable\r\n                  @close=\"handleClose(i, scope.row)\"\r\n                  >{{ item }}</el-tag\r\n                >\r\n                <!-- 输入的文本框 -->\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                >\r\n                </el-input>\r\n                <el-button\r\n                  v-else\r\n                  class=\"button-new-tag\"\r\n                  size=\"small\"\r\n                  @click=\"showInput(scope.row)\"\r\n                  >+ New Tag</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n            <!-- 索引列 -->\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column\r\n              label=\"参数名称\"\r\n              prop=\"attr_name\"\r\n            ></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  type=\"primary\"\r\n                  size=\"mini\"\r\n                  icon=\"el-icon-edit\"\r\n                  @click=\"showEditDialog(scope.row.attr_id)\"\r\n                  >编辑</el-button\r\n                >\r\n                <el-button\r\n                  type=\"danger\"\r\n                  size=\"mini\"\r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"removeParams(scope.row.attr_id)\"\r\n                  >删除</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n        <!--静态属性面板  -->\r\n        <el-tab-pane label=\"静态属性\" name=\"only\">\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"mini\"\r\n            :disabled=\"isBtnDisablabled\"\r\n            @click=\"addDialogVisible = true\"\r\n            >添加参数</el-button\r\n          >\r\n          <!-- 静态数据表格 -->\r\n          <el-table :data=\"onlyTableData\" border stripe>\r\n            <el-table-column type=\"expand\">\r\n              <template slot-scope=\"scope\">\r\n                <!-- 循环渲染tag标签 -->\r\n                <el-tag\r\n                  v-for=\"(item, i) in scope.row.attr_vals\"\r\n                  :key=\"i\"\r\n                  closable\r\n                  @close=\"handleClose(i, scope.row)\"\r\n                  >{{ item }}</el-tag\r\n                >\r\n                <!-- 输入的文本框 -->\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                >\r\n                </el-input>\r\n                <el-button\r\n                  v-else\r\n                  class=\"button-new-tag\"\r\n                  size=\"small\"\r\n                  @click=\"showInput(scope.row)\"\r\n                  >+ New Tag</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column\r\n              label=\"参数名称\"\r\n              prop=\"attr_name\"\r\n            ></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  type=\"primary\"\r\n                  size=\"mini\"\r\n                  icon=\"el-icon-edit\"\r\n                  @click=\"showEditDialog(scope.row.attr_id)\"\r\n                  >编辑</el-button\r\n                >\r\n                <el-button\r\n                  type=\"danger\"\r\n                  size=\"mini\"\r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"removeParams(scope.row.attr_id)\"\r\n                  >删除</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n    <!-- 添加参数的对话框 -->\r\n    <el-dialog\r\n      :title=\"'添加' + titleText\"\r\n      :visible.sync=\"addDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"addDialogClosed\"\r\n    >\r\n      <el-form\r\n        :model=\"addForm\"\r\n        :rules=\"addFormRules\"\r\n        ref=\"addFormRef\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"addForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 修改参数的对话框 -->\r\n\r\n    <el-dialog\r\n      :title=\"'添加' + titleText\"\r\n      :visible.sync=\"editDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"editDialogClosed\"\r\n    >\r\n      <el-form\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        ref=\"editFormRef\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"editForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      catelist: [],\r\n      // 级联选择器的配置对象\r\n      cateProps: {\r\n        value: \"cat_id\",\r\n        label: \"cat_name\",\r\n        children: \"children\",\r\n      },\r\n      // 级联选择框双向绑定的数组\r\n      selectedCateKeys: [],\r\n      // 被激活的页签名称\r\n      activeName: \"many\",\r\n      // 动态参数数据\r\n      manyTableData: [],\r\n      // 静态参数数据\r\n      onlyTableData: [],\r\n      // 添加参数对话框的显示与隐藏\r\n      addDialogVisible: false,\r\n      addForm: {},\r\n      // 添加表单的验证规则\r\n      addFormRules: {\r\n        attr_name: [\r\n          { required: true, message: \"请输入参数\", trigger: \"blur\" },\r\n          { min: 3, max: 5, message: \"长度在 3 到 5 个字符\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      // 编辑对话框的显示与隐藏\r\n      editDialogVisible: false,\r\n      editForm: {},\r\n      editFormRules: {\r\n        attr_name: [\r\n          { required: true, message: \"请输入参数\", trigger: \"blur\" },\r\n          { min: 3, max: 5, message: \"长度在 3 到 5 个字符\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      // 默认情况下隐藏文本框\r\n      inputVisible: false,\r\n      // 文本框中输入的内容\r\n      inputValue: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    this.getCateList();\r\n  },\r\n  methods: {\r\n    // 获取所有的商品分类列表\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get(\"categories\");\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取商品分类失败\");\r\n      }\r\n      this.catelist = res.data;\r\n      // console.log(this.catelist);\r\n    },\r\n    async handleChange() {\r\n      this.getParamsData();\r\n    },\r\n    // 点击不同面板所触发的函数\r\n    handleTabClick() {\r\n      this.getParamsData();\r\n    },\r\n    // 获取参数的列表数据\r\n    async getParamsData() {\r\n      // 选中的不是三级分类\r\n      if (this.selectedCateKeys.length !== 3) {\r\n        this.selectedCateKeys = [];\r\n        this.manyTableData = [];\r\n        this.onlyTableData = [];\r\n        return;\r\n      }\r\n      // 证明选中的是三级分类\r\n      // console.log(this.selectedCateKeys);\r\n      const { data: res } = await this.$http.get(\r\n        `categories/${this.cateId}/attributes`,\r\n        {\r\n          params: { sel: this.activeName },\r\n        }\r\n      );\r\n      if (res.meta.status !== 200)\r\n        return this.$message.error(\"获取参数列表失败\");\r\n      //  console.log(res.data);\r\n      res.data.forEach((item) => {\r\n        item.attr_vals = item.attr_vals ? item.attr_vals.split(\" \") : [];\r\n        // 控制文本框的显示与隐藏\r\n        item.inputVisible = false;\r\n        item.inputValue = \"\";\r\n      });\r\n\r\n      // console.log(res.data);\r\n      if (this.activeName === \"many\") {\r\n        this.manyTableData = res.data;\r\n      } else {\r\n        this.onlyTableData = res.data;\r\n      }\r\n    },\r\n    // 监听添加对话框的关闭事件\r\n    addDialogClosed() {\r\n      this.$refs.addFormRef.resetFields();\r\n    },\r\n    // 点击按钮，添加参数\r\n    addParams() {\r\n      this.$refs.addFormRef.validate(async (valid) => {\r\n        if (!valid) return;\r\n        const { data: res } = await this.$http.post(\r\n          `categories/${this.cateId}/attributes`,\r\n          {\r\n            attr_name: this.addForm.attr_name,\r\n            attr_sel: this.activeName,\r\n          }\r\n        );\r\n        if (res.meta.status !== 201) {\r\n          return this.$message.error(\"添加参数失败\");\r\n        }\r\n        this.$message.success(\"添加参数成功\");\r\n\r\n        this.addDialogVisible = false;\r\n        // 这步很重要 防止刷新页面 降低用户体验度 重新获取参数列表\r\n        this.getParamsData();\r\n      });\r\n    },\r\n    // 点击编辑按钮 展示修改的对话框\r\n    async showEditDialog(attr_id) {\r\n      const { data: res } = await this.$http.get(\r\n        `categories/${this.cateId}/attributes/${attr_id}`,\r\n        {\r\n          attr_sel: this.activeName,\r\n        }\r\n      );\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"修改参数失败\");\r\n      }\r\n      this.editForm = res.data;\r\n      this.editDialogVisible = true;\r\n    },\r\n    // 监听修改对话框的关闭事件\r\n    editDialogClosed() {\r\n      this.$refs.editFormRef.resetFields();\r\n    },\r\n    // 点击按钮，修改参数\r\n    editParams() {\r\n      this.$refs.editFormRef.validate(async (valid) => {\r\n        if (!valid) return;\r\n        const { data: res } = await this.$http.put(\r\n          `categories/${this.cateId}/attributes/\r\n          ${this.editForm.attr_id}`,\r\n          {\r\n            attr_name: this.editForm.attr_name,\r\n            attr_sel: this.activeName,\r\n          }\r\n        );\r\n\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(\"修改参数失败\");\r\n        }\r\n        this.$message.success(\"修改参数成功\");\r\n\r\n        this.getParamsData();\r\n        this.editDialogVisible = false;\r\n      });\r\n    },\r\n    // 根据id是否进行删除\r\n    async removeParams(attr_id) {\r\n      const confirmResult = await this.$confirm(\r\n        \"此操作将永久删除该值, 是否继续?\",\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n        }\r\n      ).catch((err) => err);\r\n      if (confirmResult !== \"confirm\") {\r\n        return this.$message.info(\"已取消删除\");\r\n      }\r\n      // 删除的业务逻辑\r\n      const { data: res } = await this.$http.delete(\r\n        `categories/${this.cateId}/attributes/${attr_id}`\r\n      );\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"删除参数失败\");\r\n      }\r\n      this.$message.success(\"删除参数成功\");\r\n      this.getParamsData();\r\n    },\r\n    // 文本框失去焦点或者按下都会触发这个函数\r\n    async handleInputConfirm(row) {\r\n      // console.log(\"ok\");\r\n      // 判断去掉空格之后的长度是否为0\r\n      if (row.inputValue.trim().length === 0) {\r\n        row.inputValue = \"\";\r\n        row.inputVisible = false;\r\n        return;\r\n      }\r\n      // 如果没有return 需要后续处理\r\n      row.attr_vals.push(row.inputValue.trim());\r\n      this.saveAttrVals(row);\r\n    },\r\n    // 对attr_vals的操作保存到数据库\r\n    async saveAttrVals(row) {\r\n      // 发送请求 保存操作\r\n      const { data: res } = await this.$http.put(\r\n        `categories/${this.cateId}/attributes/${row.attr_id}`,\r\n        {\r\n          attr_name: row.attr_name,\r\n          attr_sel: this.activeName,\r\n          attr_vals: row.attr_vals.join(\" \"),\r\n        }\r\n      );\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"修改参数项失败\");\r\n      }\r\n      this.$message.success(\"修改参数项成功\");\r\n      row.inputValue = \"\";\r\n      row.inputVisible = false;\r\n    },\r\n    // 点击按钮展示文本框\r\n    showInput(row) {\r\n      row.inputVisible = true;\r\n      // 让文本框获取焦点 非常重要\r\n      // $nextTick 就是当页面上元素被重新渲染之后，才会指定回调函数中的代码\r\n      this.$nextTick((_) => {\r\n        this.$refs.saveTagInput.$refs.input.focus();\r\n      });\r\n    },\r\n    // 删除对应的参数项\r\n    handleClose(i, row) {\r\n      row.attr_vals.splice(i, 1);\r\n      this.saveAttrVals(row);\r\n    },\r\n  },\r\n  computed: {\r\n    // 如果按钮需要被禁用，则返回true，否则返回false\r\n    isBtnDisablabled() {\r\n      if (this.selectedCateKeys.length !== 3) return true;\r\n      return false;\r\n    },\r\n    // 当前选中的三级分类的id\r\n    cateId() {\r\n      if (this.selectedCateKeys.length === 3) {\r\n        return this.selectedCateKeys[2];\r\n      }\r\n      return null;\r\n    },\r\n\r\n    // 动态计算面板的名称\r\n    titleText() {\r\n      if (this.activeName === \"many\") {\r\n        return \"动态参数\";\r\n      } else {\r\n        return \"静态属性\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.cat_opt {\r\n  margin: 20px 0;\r\n}\r\n.input-new-tag {\r\n  width: 120px !important;\r\n}\r\n</style>"]}]}