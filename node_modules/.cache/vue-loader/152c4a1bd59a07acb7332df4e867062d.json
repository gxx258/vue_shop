{"remainingRequest":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\CodePath\\项目实战\\code\\vue-shop2\\src\\components\\power\\Roles.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\src\\components\\power\\Roles.vue","mtime":1603931417536},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmVsLXRhZyB7DQogIG1hcmdpbjogN3B4Ow0KfQ0KLmJkdG9wIHsNCiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlZWVlZWU7DQp9DQouYmRib3R0b20gew0KICBib3JkZXItdG9wOiAxcHggc29saWQgI2VlZWVlZTsNCn0NCi52Y2VudHJlIHsNCiAgZGlzcGxheTogZmxleDsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCn0NCg=="},{"version":3,"sources":["Roles.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Roles.vue","sourceRoot":"src/components/power","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>权限管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>角色列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片区域 -->\r\n    <el-card class=\"box-card\">\r\n      <!-- 添加角色按钮 -->\r\n      <el-row\r\n        ><el-col\r\n          ><el-button type=\"primary\" size=\"mini\">添加角色</el-button></el-col\r\n        ></el-row\r\n      >\r\n      <el-table :data=\"rolelist\" border stripe>\r\n        <!-- 展开列 -->\r\n        <el-table-column type=\"expand\">\r\n          <template slot-scope=\"scope\" width=\"200px\">\r\n            <el-row\r\n              :class=\"['bdbottom', i1 === 0 ? 'bdtop' : '', 'vcentre']\"\r\n              v-for=\"(item1, i1) in scope.row.children\"\r\n              :key=\"item1.id\"\r\n            >\r\n              <!-- 渲染一级权限 -->\r\n              <el-col :span=\"5\">\r\n                <el-tag\r\n                  type=\"primary\"\r\n                  closable\r\n                  @close=\"removeRightById(scope.row, item1.id)\"\r\n                  >{{ item1.authName }}</el-tag\r\n                >\r\n                <i class=\"el-icon-caret-right\"></i>\r\n              </el-col>\r\n              <!-- 渲染二级和三级权限 -->\r\n              <el-col :span=\"19\">\r\n                <el-row\r\n                  :class=\"[i2 === 0 ? ' ' : 'bdtop', 'vcentre']\"\r\n                  v-for=\"(item2, i2) in item1.children\"\r\n                  :key=\"item2.id\"\r\n                >\r\n                  <!-- 二级权限 -->\r\n                  <el-col :span=\"6\"\r\n                    ><el-tag\r\n                      type=\"warning\"\r\n                      closable\r\n                      @close=\"removeRightById(scope.row, item2.id)\"\r\n                      >{{ item2.authName }}</el-tag\r\n                    >\r\n                    <i class=\"el-icon-caret-right\"></i\r\n                  ></el-col>\r\n                  <!-- 三级权限 -->\r\n                  <el-col :span=\"18\"\r\n                    ><el-tag\r\n                      v-for=\"item3 in item2.children\"\r\n                      :key=\"item3.id\"\r\n                      type=\"success\"\r\n                      closable\r\n                      @close=\"removeRightById(scope.row, item3.id)\"\r\n                      >{{ item3.authName }}</el-tag\r\n                    ></el-col\r\n                  >\r\n                </el-row>\r\n              </el-col>\r\n            </el-row>\r\n          </template>\r\n        </el-table-column>\r\n        <!-- 索引列 -->\r\n        <el-table-column type=\"index\" label=\"#\"></el-table-column>\r\n        <el-table-column label=\"角色名称\" prop=\"roleName\"></el-table-column>\r\n        <el-table-column label=\"角色描述\" prop=\"roleDesc\"></el-table-column>\r\n        <el-table-column label=\"操作\">\r\n          <template slot-scope=\"scope\" width=\"200px\">\r\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\"\r\n              >编辑</el-button\r\n            >\r\n            <el-button type=\"warning\" icon=\"el-icon-delete\" size=\"mini\"\r\n              >删除</el-button\r\n            >\r\n            <el-button\r\n              type=\"danger\"\r\n              icon=\"el-icon-setting\"\r\n              size=\"mini\"\r\n              @click=\"showSetRightDialog(scope.row)\"\r\n              >分配权限</el-button\r\n            >\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-card>\r\n\r\n    <!-- 分配权限的对话框 -->\r\n    <el-dialog\r\n      title=\"分配权限\"\r\n      :visible.sync=\"setRightDialogVisible\"\r\n      width=\"30%\"\r\n      @close=\"setRightDialogClosed\"\r\n    >\r\n      <!-- \r\n        树形控件\r\n        default-checked-keys\r\n        默认勾选的节点的 key 的数组\r\n       -->\r\n      <el-tree\r\n        :data=\"rightslist\"\r\n        :props=\"defaultProps\"\r\n        show-checkbox\r\n        node-key=\"id\"\r\n        :default-expand-all=\"true\"\r\n        :default-checked-keys=\"defKeys\"\r\n        ref=\"treeRef\"\r\n      ></el-tree>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"setRightDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"allotRights\"\r\n          >确 定</el-button\r\n        >\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      rolelist: [],\r\n      // 控制分配权限对话框的显示与隐藏\r\n      setRightDialogVisible: false,\r\n      // 所有权限的数据\r\n      rightslist: [],\r\n      // 树形控件的属性绑定对象\r\n      defaultProps: {\r\n        children: \"children\",\r\n        label: \"authName\",\r\n      },\r\n      // 默认选中的节点id值数组\r\n      defKeys: [],\r\n      // 当前即将分配权限的角色id\r\n      roleId:''\r\n    };\r\n  },\r\n  created() {\r\n    this.getRoleList();\r\n  },\r\n  methods: {\r\n    async getRoleList() {\r\n      const { data: res } = await this.$http.get(\"roles\");\r\n      if (res.meta.status !== 200) return this.$message.error(\"获取信息失败\");\r\n      this.rolelist = res.data;\r\n      // console.log(this.rolelist);\r\n    },\r\n    // 根据对应的id删除对应的权限\r\n    async removeRightById(role, rightId) {\r\n      const confirmResult = await this.$confirm(\r\n        \"此操作将永久删除该文件, 是否继续?\",\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n        }\r\n      ).catch((err) => err);\r\n      if (confirmResult !== \"confirm\") return this.$message.info(\"取消了删除\");\r\n      console.log(\"确认了删除\");\r\n      const { data: res } = await this.$http.delete(\r\n        `roles/${role.id}/rights/${rightId}`\r\n      );\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"删除角色失败\");\r\n      }\r\n      // this.getRoleList()\r\n      // 这步很重要 防止列表的刷新，提升用户的体验度\r\n      role.children = res.data;\r\n    },\r\n    // 这是分配权限的对话框\r\n    async showSetRightDialog(role) {\r\n      this.roleId=role.id\r\n      const { data: res } = await this.$http.get(\"rights/tree\");\r\n      if (res.meta.status !== 200)\r\n        return this.$message.error(\"获取权限数据失败\");\r\n      // 将获取到的数据保存到rightlist中\r\n      this.rightslist = res.data;\r\n      // console.log(this.rightslist);\r\n      // 递归\r\n      this.getLeafKeys(role, this.defKeys);\r\n      this.setRightDialogVisible = true;\r\n    },\r\n    // 通过递归的形式，获取角色下所有的三级权限的id，并保存到\r\n    getLeafKeys(node, arr) {\r\n      // 如果当前node节点不包含children属性，则是三级节点\r\n      if (!node.children) return arr.push(node.id);\r\n      node.children.forEach((item) => {\r\n        this.getLeafKeys(item, arr);\r\n      });\r\n    },\r\n    //监听分配权限对话框的关闭事件\r\n    setRightDialogClosed() {\r\n      this.defKeys = [];\r\n    },\r\n    // 点击为角色分配权限\r\n   async allotRights(){\r\n      const keys = [\r\n        // 将两个数组组成一个新的数组\r\n        ...this.$refs.treeRef.getCheckedKeys(),\r\n        ...this.$refs.treeRef.getHalfCheckedKeys()\r\n      ]\r\n      const idStr = keys.join(',')\r\n      //rids 权限id列表 \r\n     const{data:res}=await this.$http.post(`roles/${this.roleId}/rights`, {rids:idStr})\r\n     if(res.meta.status!==200)return this.$message.error('分配权限失败')\r\n     this.$message.success('分配权限成功')\r\n     this.getRoleList()\r\n     this.setRightDialogVisible=false\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.el-tag {\r\n  margin: 7px;\r\n}\r\n.bdtop {\r\n  border-top: 1px solid #eeeeee;\r\n}\r\n.bdbottom {\r\n  border-top: 1px solid #eeeeee;\r\n}\r\n.vcentre {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n</style>"]}]}