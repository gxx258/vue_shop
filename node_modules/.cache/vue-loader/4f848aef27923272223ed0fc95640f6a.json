{"remainingRequest":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\CodePath\\项目实战\\code\\vue-shop2\\src\\components\\goods\\Add.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\src\\components\\goods\\Add.vue","mtime":1604060960136},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgXyBmcm9tICdsb2Rhc2gnDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGFjdGl2ZUluZGV4OiAiMCIsDQogICAgICBhZGRGb3JtOiB7DQogICAgICAgIC8vIOi/meS4quayoeWumuS5ieeahOivnSBiZWZvcmVUYWJMZWF2ZeS4reS8muaKpemUmQ0KICAgICAgICBnb29kc19jYXQ6IFtdLA0KICAgICAgICAvLyDmt7vliqDlm77niYfnmoTmlbDnu4QNCiAgICAgICAgcGljczogW10sDQogICAgICB9LA0KICAgICAgYWRkRm9ybVJ1bGVzOiB7DQogICAgICAgIGdvb2RzX25hbWU6IFsNCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl5ZWG5ZOB5ZCN56ewIiwgdHJpZ2dlcjogImJsdXIiIH0sDQogICAgICAgICAgeyBtaW46IDMsIG1heDogNSwgbWVzc2FnZTogIumVv+W6puWcqCAzIOWIsCA1IOS4quWtl+espiIsIHRyaWdnZXI6ICJibHVyIiB9LA0KICAgICAgICBdLA0KICAgICAgICBnb29kc19wcmljZTogWw0KICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXllYblk4Hku7fmoLwiLCB0cmlnZ2VyOiAiYmx1ciIgfSwNCiAgICAgICAgXSwNCiAgICAgICAgZ29vZHNfd2VpZ2h0OiBbDQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+i+k+WFpeWVhuWTgemHjemHjyIsIHRyaWdnZXI6ICJibHVyIiB9LA0KICAgICAgICBdLA0KICAgICAgICBnb29kc19udW1iZXI6IFsNCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl5ZWG5ZOB5pWw6YePIiwgdHJpZ2dlcjogImJsdXIiIH0sDQogICAgICAgIF0sDQogICAgICAgIGdvb2RzX2NhdDogWw0KICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fpgInmi6nllYblk4HliIbnsbsiLCB0cmlnZ2VyOiAiYmx1ciIgfSwNCiAgICAgICAgXSwNCiAgICAgIH0sDQogICAgICBjYXRlbGlzdDogW10sDQogICAgICBjYXRlUHJvcHM6IHsNCiAgICAgICAgbGFiZWw6ICJjYXRfbmFtZSIsDQogICAgICAgIHZhbHVlOiAiY2F0X2lkIiwNCiAgICAgICAgY2hpbGRyZW46ICJjaGlsZHJlbiIsDQogICAgICB9LA0KICAgICAgLy8g5Yqo5oCB5Y+C5pWw5YiX6KGo5pWw5o2uDQogICAgICBtYW55VGFibGVEYXRhOiBbXSwNCiAgICAgIC8vIOmdmeaAgeWPguaVsOWIl+ihqOaVsOaNrg0KICAgICAgb25seVRhYmxlRGF0YTogW10sDQogICAgICB1cGxvYWRVUkw6ICJodHRwOi8vMTI3LjAuMC4xOjg4ODgvYXBpL3ByaXZhdGUvdjEvdXBsb2FkIiwNCiAgICAgIC8vIOWbvueJh+S4iuS8oOe7hOS7tueahGhlYWRlcnPor7fmsYLlpLTlr7nosaENCiAgICAgIGhlYWRlck9iajogew0KICAgICAgICBBdXRob3JpemF0aW9uOiB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgidG9rZW4iKSwNCiAgICAgIH0sDQogICAgICBwcmV2aWV3UGF0aDogIiIsDQogICAgICAvLyAg6buY6K6k5Zu+54mH6aKE6KeI55qE5pi+56S65LiO6ZqQ6JePDQogICAgICBwcmV2aWV3VmlzaWJsZTogZmFsc2UsDQogICAgfTsNCiAgfSwNCiAgY3JlYXRlZCgpIHsNCiAgICB0aGlzLmdldENhdGVMaXN0KCk7DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgY2F0ZUlkKCkgew0KICAgICAgaWYgKHRoaXMuYWRkRm9ybS5nb29kc19jYXQubGVuZ3RoID09PSAzKSB7DQogICAgICAgIHJldHVybiB0aGlzLmFkZEZvcm0uZ29vZHNfY2F0WzJdOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICB9DQogICAgfSwNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGFzeW5jIGdldENhdGVMaXN0KCkgew0KICAgICAgY29uc3QgeyBkYXRhOiByZXMgfSA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KCJjYXRlZ29yaWVzIik7DQogICAgICBpZiAocmVzLm1ldGEuc3RhdHVzICE9PSAyMDApDQogICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCLojrflj5bllYblk4HliIbnsbvmlbDmja7lpLHotKUiKTsNCiAgICAgIHRoaXMuY2F0ZWxpc3QgPSByZXMuZGF0YTsNCiAgICAgIC8vICAgY29uc29sZS5sb2codGhpcy5jYXRlbGlzdCk7DQogICAgfSwNCiAgICAvLyDnuqfogZTpgInmi6nlmajkuK3pobnlj5HnlJ/lj5jljJblsLHkvJrop6blj5Hov5nkuKrlh73mlbANCiAgICBoYW5kbGVDaGFuZ2UoKSB7DQogICAgICBpZiAodGhpcy5hZGRGb3JtLmdvb2RzX2NhdC5sZW5ndGggIT09IDMpIHsNCiAgICAgICAgdGhpcy5hZGRGb3JtLmdvb2RzX2NhdCA9IFtdOw0KICAgICAgfQ0KICAgIH0sDQogICAgYmVmb3JlVGFiTGVhdmUoYWN0aXZlTmFtZSwgb2xkQWN0aXZlTmFtZSkgew0KICAgICAgLy8gICBjb25zb2xlLmxvZyh0aGlzLmFkZEZvcm0uZ29vZHNfY2F0Lmxlbmd0aCk7DQogICAgICBpZiAob2xkQWN0aXZlTmFtZSA9PT0gIjAiICYmIHRoaXMuYWRkRm9ybS5nb29kc19jYXQubGVuZ3RoICE9PSAzKSB7DQogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuivt+mAieaLqeWVhuWTgeWIhuexuyIpOw0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICB9DQogICAgfSwNCiAgICBhc3luYyB0YWJDbGlja2VkKCkgew0KICAgICAgLy8gY29uc29sZS5sb2codGhpcy5hY3RpdmVJbmRleCk7DQogICAgICAvLyDor4HmmI7orr/pl67nmoTmmK/liqjmgIHlj4LmlbDpnaLmnb8NCiAgICAgIGlmICh0aGlzLmFjdGl2ZUluZGV4ID09PSAiMSIpIHsNCiAgICAgICAgY29uc3QgeyBkYXRhOiByZXMgfSA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KA0KICAgICAgICAgIGBjYXRlZ29yaWVzLyR7dGhpcy5jYXRlSWR9L2F0dHJpYnV0ZXNgLA0KICAgICAgICAgIHsNCiAgICAgICAgICAgIHBhcmFtczogeyBzZWw6ICJtYW55IiB9LA0KICAgICAgICAgIH0NCiAgICAgICAgKTsNCiAgICAgICAgaWYgKHJlcy5tZXRhLnN0YXR1cyAhPT0gMjAwKQ0KICAgICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCLojrflj5bliqjmgIHliJfooajmlbDmja7lpLHotKUiKTsNCiAgICAgICAgLy8gIOmBjeWOhuaVsOe7hOWwhmF0dHJfdmFsc+WxnuaAp+i9rOWMluS4uuaVsOe7hA0KICAgICAgICByZXMuZGF0YS5mb3JFYWNoKChpdGVtKSA9PiB7DQogICAgICAgICAgaXRlbS5hdHRyX3ZhbHMgPSBpdGVtLmF0dHJfdmFscyA/IGl0ZW0uYXR0cl92YWxzLnNwbGl0KCIgIikgOiBbXTsNCiAgICAgICAgfSk7DQogICAgICAgIHRoaXMubWFueVRhYmxlRGF0YSA9IHJlcy5kYXRhOw0KICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXMuZGF0YSk7DQogICAgICB9IGVsc2UgaWYgKHRoaXMuYWN0aXZlSW5kZXggPT09ICIyIikgew0KICAgICAgICBjb25zdCB7IGRhdGE6IHJlcyB9ID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoDQogICAgICAgICAgYGNhdGVnb3JpZXMvJHt0aGlzLmNhdGVJZH0vYXR0cmlidXRlc2AsDQogICAgICAgICAgew0KICAgICAgICAgICAgcGFyYW1zOiB7IHNlbDogIm9ubHkiIH0sDQogICAgICAgICAgfQ0KICAgICAgICApOw0KICAgICAgICBpZiAocmVzLm1ldGEuc3RhdHVzICE9PSAyMDApDQogICAgICAgICAgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuiOt+WPlumdmeaAgeWIl+ihqOaVsOaNruWksei0pSIpOw0KICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXMuZGF0YSk7DQogICAgICAgIHRoaXMub25seVRhYmxlRGF0YSA9IHJlcy5kYXRhOw0KICAgICAgfQ0KICAgIH0sDQogICAgLy8g5aSE55CG5Zu+54mH6aKE6KeI55qE5pON5L2cDQogICAgaGFuZGxlUHJldmlldyhmaWxlKSB7DQogICAgICB0aGlzLnByZXZpZXdQYXRoID0gZmlsZS5yZXNwb25zZS5kYXRhLnVybDsNCiAgICAgIHRoaXMucHJldmlld1Zpc2libGUgPSB0cnVlOw0KICAgIH0sDQogICAgLy8g5aSE55CG56e75Ye65Zu+54mH55qE5pON5L2cDQogICAgaGFuZGxlUmVtb3ZlKGZpbGUpIHsNCiAgICAgIC8vIOiOt+WPluWwhuimgeWIoOmZpOeahOWbvueJh+eahOS4tOaXtui3r+W+hA0KICAgICAgY29uc3QgZmlsZVBhdGggPSBmaWxlLnJlc3BvbnNlLmRhdGEudG1wX3BhdGg7DQogICAgICAvLyDku45waWNz5Lit5om+5Yiw6L+Z5Liq5Zu+54mH5a+55bqU55qE57Si5byV5YC8DQogICAgICBjb25zdCBpID0gdGhpcy5hZGRGb3JtLnBpY3MuZmluZEluZGV4KCh4KSA9PiB4LnBpYyA9PT0gZmlsZVBhdGgpOw0KICAgICAgLy8g6LCD55Soc3BsaWNl5pa55rOV77yM5oqK5Zu+54mH5L+h5oGv5a+56LGh77yM5LuOcGljc+S4reenu+WHug0KICAgICAgdGhpcy5hZGRGb3JtLnBpY3Muc3BsaWNlKGksIDEpOw0KICAgICAgY29uc29sZS5sb2codGhpcy5hZGRGb3JtKTsNCiAgICB9LA0KICAgIC8vIOebkeWQrOWbvueJh+S4iuS8oOaIkOWKn+eahOS6i+S7tg0KICAgIGhhbmRsZVN1Y2Nlc3MocmVzcG9uc2UpIHsNCiAgICAgIC8vIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsNCiAgICAgIC8vMS7mi7zmjqXlvpfliLDkuIDkuKrlm77niYfkv6Hmga/lr7nosaENCiAgICAgIGNvbnN0IHBpY0luZm8gPSB7IHBpYzogcmVzcG9uc2UuZGF0YS50bXBfcGF0aCB9Ow0KICAgICAgLy8gMi7lsIblm77niYfkv6Hmga/lr7nosaHvvIxwdXNo5YiwcGljc+aVsOe7hOS4rQ0KICAgICAgdGhpcy5hZGRGb3JtLnBpY3MucHVzaChwaWNJbmZvKTsNCiAgICAgIGNvbnNvbGUubG9nKHRoaXMuYWRkRm9ybSk7DQogICAgfSwNCiAgICAvLyDmt7vliqDllYblk4ENCiAgICBhZGQoKXsNCiAgICAvLyAgIHRoaXMuJHJlZnMuYWRkRm9ybVJlZi52YWxpZGF0ZSh2YWxpZD0+ew0KICAgIC8vICAgICAgIGlmKCF2YWxpZClyZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcign6K+35aGr5YaZ5b+F6KaB55qE6KGo5Y2V6aG5JykNCiAgICAvLyAgICAgLy8gICDmiafooYzmt7vliqDnmoTkuJrliqHpgLvovpEg5rex5ou36LSdDQoNCiAgICAvLyAgIH0pDQogICAgfQ0KICB9LA0KfTsNCg=="},{"version":3,"sources":["Add.vue"],"names":[],"mappingsfile":"Add.vue","sourceRoot":"src/components/goods","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>添加商品</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片区域 -->\r\n    <el-card class=\"box-card\">\r\n      <!-- 提示区域 -->\r\n      <el-alert\r\n        title=\"添加商品信息\"\r\n        type=\"info\"\r\n        center\r\n        show-icon\r\n        :closable=\"false\"\r\n      >\r\n      </el-alert>\r\n      <!-- 步骤条区域 -->\r\n      <el-steps\r\n        :space=\"200\"\r\n        :active=\"activeIndex - 0\"\r\n        finish-status=\"success\"\r\n        align-center\r\n      >\r\n        <el-step title=\"基本信息\"></el-step>\r\n        <el-step title=\"商品参数\"></el-step>\r\n        <el-step title=\"商品属性\"></el-step>\r\n        <el-step title=\"商品图片\"></el-step>\r\n        <el-step title=\"商品内容\"></el-step>\r\n        <el-step title=\"完成\"></el-step>\r\n      </el-steps>\r\n      <!-- tab区域 -->\r\n      <el-form\r\n        :model=\"addForm\"\r\n        :rules=\"addFormRules\"\r\n        ref=\"addFormRef\"\r\n        label-width=\"100px\"\r\n        label-position=\"top\"\r\n      >\r\n        <!-- tab-click专属点击事件 -->\r\n        <el-tabs\r\n          :tab-position=\"'left'\"\r\n          v-model=\"activeIndex\"\r\n          :before-leave=\"beforeTabLeave\"\r\n          @tab-click=\"tabClicked\"\r\n        >\r\n          <el-tab-pane label=\"基本信息\" name=\"0\">\r\n            <el-form-item label=\"商品名称\" prop=\"goods_name\">\r\n              <el-input v-model=\"addForm.goods_name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品价格\" prop=\"goods_price\">\r\n              <el-input v-model=\"addForm.goods_price\" type=\"number\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品重量\" prop=\"goods_weight\">\r\n              <el-input v-model=\"addForm.goods_weight\" type=\"number\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品数量\" prop=\"goods_number\">\r\n              <el-input v-model=\"addForm.goods_number\" type=\"number\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品分类\" prop=\"goods_cat\">\r\n              <!-- 商品分类的级联选择器 -->\r\n              <el-cascader\r\n                expand-trigger=\"hover\"\r\n                v-model=\"addForm.goods_cat\"\r\n                :options=\"catelist\"\r\n                :props=\"cateProps\"\r\n                @change=\"handleChange\"\r\n              ></el-cascader>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <!-- 商品参数 -->\r\n          <el-tab-pane label=\"商品参数\" name=\"1\">\r\n            <!-- 渲染商品参数的表单项 -->\r\n            <el-form-item\r\n              :label=\"item.attr_name\"\r\n              v-for=\"item in manyTableData\"\r\n              :key=\"item.attr_id\"\r\n            >\r\n              <!-- 复选框组 -->\r\n              <el-checkbox-group v-model=\"item.attr_vals\">\r\n                <el-checkbox\r\n                  :label=\"item1\"\r\n                  v-for=\"(item1, i) in item.attr_vals\"\r\n                  :key=\"i\"\r\n                  border\r\n                ></el-checkbox>\r\n              </el-checkbox-group>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <!-- 商品属性 -->\r\n          <el-tab-pane label=\"商品属性\" name=\"2\">\r\n            <!-- 商品属性验证表单 -->\r\n            <el-form-item\r\n              :label=\"item.attr_name\"\r\n              v-for=\"item in onlyTableData\"\r\n              :key=\"item.attr_id\"\r\n            >\r\n              <el-input v-model=\"item.attr_vals\"></el-input>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <!-- 商品图片 -->\r\n          <el-tab-pane label=\"商品图片\" name=\"3\">\r\n            <!--\r\n               action 表示要上传的后台API \r\n              上传图片需要手动添加头文件:headers\r\n              -->\r\n            <el-upload\r\n              class=\"upload-demo\"\r\n              :action=\"uploadURL\"\r\n              :on-preview=\"handlePreview\"\r\n              :on-remove=\"handleRemove\"\r\n              list-type=\"picture\"\r\n              :headers=\"headerObj\"\r\n              :on-success=\"handleSuccess\"\r\n            >\r\n              <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n              <div slot=\"tip\" class=\"el-upload__tip\">\r\n                只能上传jpg/png文件，且不超过500kb\r\n              </div>\r\n            </el-upload>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"商品内容\" name=\"4\">\r\n              <quill-editor v-model=\"addForm.goods_introduce\"></quill-editor>\r\n          <el-button type=\"primary\" class=\"btnAdd\" @click=\"add\">添加商品</el-button>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </el-form>\r\n    </el-card>\r\n\r\n    <!-- 图片预览对话框 -->\r\n    <el-dialog title=\"图片预览\" :visible.sync=\"previewVisible\" width=\"50%\">\r\n      <img :src=\"previewPath\" alt=\"\" class=\"previewImg\">\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport _ from 'lodash'\r\nexport default {\r\n  data() {\r\n    return {\r\n      activeIndex: \"0\",\r\n      addForm: {\r\n        // 这个没定义的话 beforeTabLeave中会报错\r\n        goods_cat: [],\r\n        // 添加图片的数组\r\n        pics: [],\r\n      },\r\n      addFormRules: {\r\n        goods_name: [\r\n          { required: true, message: \"请输入商品名称\", trigger: \"blur\" },\r\n          { min: 3, max: 5, message: \"长度在 3 到 5 个字符\", trigger: \"blur\" },\r\n        ],\r\n        goods_price: [\r\n          { required: true, message: \"请输入商品价格\", trigger: \"blur\" },\r\n        ],\r\n        goods_weight: [\r\n          { required: true, message: \"请输入商品重量\", trigger: \"blur\" },\r\n        ],\r\n        goods_number: [\r\n          { required: true, message: \"请输入商品数量\", trigger: \"blur\" },\r\n        ],\r\n        goods_cat: [\r\n          { required: true, message: \"请选择商品分类\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      catelist: [],\r\n      cateProps: {\r\n        label: \"cat_name\",\r\n        value: \"cat_id\",\r\n        children: \"children\",\r\n      },\r\n      // 动态参数列表数据\r\n      manyTableData: [],\r\n      // 静态参数列表数据\r\n      onlyTableData: [],\r\n      uploadURL: \"http://127.0.0.1:8888/api/private/v1/upload\",\r\n      // 图片上传组件的headers请求头对象\r\n      headerObj: {\r\n        Authorization: window.sessionStorage.getItem(\"token\"),\r\n      },\r\n      previewPath: \"\",\r\n      //  默认图片预览的显示与隐藏\r\n      previewVisible: false,\r\n    };\r\n  },\r\n  created() {\r\n    this.getCateList();\r\n  },\r\n  computed: {\r\n    cateId() {\r\n      if (this.addForm.goods_cat.length === 3) {\r\n        return this.addForm.goods_cat[2];\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get(\"categories\");\r\n      if (res.meta.status !== 200)\r\n        return this.$message.error(\"获取商品分类数据失败\");\r\n      this.catelist = res.data;\r\n      //   console.log(this.catelist);\r\n    },\r\n    // 级联选择器中项发生变化就会触发这个函数\r\n    handleChange() {\r\n      if (this.addForm.goods_cat.length !== 3) {\r\n        this.addForm.goods_cat = [];\r\n      }\r\n    },\r\n    beforeTabLeave(activeName, oldActiveName) {\r\n      //   console.log(this.addForm.goods_cat.length);\r\n      if (oldActiveName === \"0\" && this.addForm.goods_cat.length !== 3) {\r\n        this.$message.error(\"请选择商品分类\");\r\n        return false;\r\n      }\r\n    },\r\n    async tabClicked() {\r\n      // console.log(this.activeIndex);\r\n      // 证明访问的是动态参数面板\r\n      if (this.activeIndex === \"1\") {\r\n        const { data: res } = await this.$http.get(\r\n          `categories/${this.cateId}/attributes`,\r\n          {\r\n            params: { sel: \"many\" },\r\n          }\r\n        );\r\n        if (res.meta.status !== 200)\r\n          return this.$message.error(\"获取动态列表数据失败\");\r\n        //  遍历数组将attr_vals属性转化为数组\r\n        res.data.forEach((item) => {\r\n          item.attr_vals = item.attr_vals ? item.attr_vals.split(\" \") : [];\r\n        });\r\n        this.manyTableData = res.data;\r\n        // console.log(res.data);\r\n      } else if (this.activeIndex === \"2\") {\r\n        const { data: res } = await this.$http.get(\r\n          `categories/${this.cateId}/attributes`,\r\n          {\r\n            params: { sel: \"only\" },\r\n          }\r\n        );\r\n        if (res.meta.status !== 200)\r\n          return this.$message.error(\"获取静态列表数据失败\");\r\n        // console.log(res.data);\r\n        this.onlyTableData = res.data;\r\n      }\r\n    },\r\n    // 处理图片预览的操作\r\n    handlePreview(file) {\r\n      this.previewPath = file.response.data.url;\r\n      this.previewVisible = true;\r\n    },\r\n    // 处理移出图片的操作\r\n    handleRemove(file) {\r\n      // 获取将要删除的图片的临时路径\r\n      const filePath = file.response.data.tmp_path;\r\n      // 从pics中找到这个图片对应的索引值\r\n      const i = this.addForm.pics.findIndex((x) => x.pic === filePath);\r\n      // 调用splice方法，把图片信息对象，从pics中移出\r\n      this.addForm.pics.splice(i, 1);\r\n      console.log(this.addForm);\r\n    },\r\n    // 监听图片上传成功的事件\r\n    handleSuccess(response) {\r\n      // console.log(response);\r\n      //1.拼接得到一个图片信息对象\r\n      const picInfo = { pic: response.data.tmp_path };\r\n      // 2.将图片信息对象，push到pics数组中\r\n      this.addForm.pics.push(picInfo);\r\n      console.log(this.addForm);\r\n    },\r\n    // 添加商品\r\n    add(){\r\n    //   this.$refs.addFormRef.validate(valid=>{\r\n    //       if(!valid)return this.$message.error('请填写必要的表单项')\r\n    //     //   执行添加的业务逻辑 深拷贝\r\n\r\n    //   })\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.previewImg{\r\n    width: 100%;\r\n}\r\n.btnAdd{\r\n\r\n    margin-top: 15px !important;\r\n}\r\n</style>"]}]}