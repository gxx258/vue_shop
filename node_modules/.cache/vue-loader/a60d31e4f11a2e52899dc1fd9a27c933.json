{"remainingRequest":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\CodePath\\项目实战\\code\\vue-shop2\\src\\components\\report\\Report.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\src\\components\\report\\Report.vue","mtime":1604071076549},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\CodePath\\项目实战\\code\\vue-shop2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQovLyAxLuWvvOWFpWVjaGFydHMNCmltcG9ydCBlY2hhcnRzIGZyb20gImVjaGFydHMiOw0KaW1wb3J0IF8gZnJvbSAnbG9kYXNoJw0KZXhwb3J0IGRlZmF1bHQgew0KICAgIGRhdGEoKXtyZXR1cm57DQogICAgICAgIC8vIOmcgOimgeWQiOW5tueahOaVsOaNrg0KICAgICAgICBvcHRpb25zOiB7DQogICAgICAgICAgdGl0bGU6IHsNCiAgICAgICAgICAgIHRleHQ6ICfnlKjmiLfmnaXmupAnDQogICAgICAgICAgfSwNCiAgICAgICAgICB0b29sdGlwOiB7DQogICAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsDQogICAgICAgICAgICBheGlzUG9pbnRlcjogew0KICAgICAgICAgICAgICB0eXBlOiAnY3Jvc3MnLA0KICAgICAgICAgICAgICBsYWJlbDogew0KICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNFOUVFRjMnDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LA0KICAgICAgICAgIGdyaWQ6IHsNCiAgICAgICAgICAgIGxlZnQ6ICczJScsDQogICAgICAgICAgICByaWdodDogJzQlJywNCiAgICAgICAgICAgIGJvdHRvbTogJzMlJywNCiAgICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQ0KICAgICAgICAgIH0sDQogICAgICAgICAgeEF4aXM6IFsNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgYm91bmRhcnlHYXA6IGZhbHNlDQogICAgICAgICAgICB9DQogICAgICAgICAgXSwNCiAgICAgICAgICB5QXhpczogWw0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICB0eXBlOiAndmFsdWUnDQogICAgICAgICAgICB9DQogICAgICAgICAgXQ0KICAgICAgICB9DQogICAgfX0sDQogYXN5bmMgbW91bnRlZCgpIHsNCiAgICAvLyAzLuWfuuS6juWHhuWkh+WlveeahERvbe+8jOWIneWni+WMlmVjaGFydHPlrp7kvosNCiAgICB2YXIgbXlDaGFydCA9IGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibWFpbiIpKTsNCg0KICAgY29uc3R7ZGF0YTpyZXN9PWF3YWl0IHRoaXMuJGh0dHAuZ2V0KCdyZXBvcnRzL3R5cGUvMScpDQogICBpZihyZXMubWV0YS5zdGF0dXMhPT0yMDApcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPluaKmOe6v+WbvuaVsOaNruWksei0pScpDQogICAgLy8gNC7mjIflrprlm77ooajnmoTphY3nva7pobnlkozmlbDmja4NCiAgIGNvbnN0IHJlc3VsdCA9IF8ubWVyZ2UocmVzLmRhdGEsdGhpcy5vcHRpb25zKQ0KICANCg0KICAgIC8vIDXvvIzkvb/nlKjliJrmjIflrprnmoTphY3nva7pobnlkozmlbDmja7mmL7npLrlm77ooajjgIINCiAgICBteUNoYXJ0LnNldE9wdGlvbihyZXN1bHQpOw0KICB9LA0KfTsNCg=="},{"version":3,"sources":["Report.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA","file":"Report.vue","sourceRoot":"src/components/report","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据统计</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据报表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片区域 -->\r\n\r\n    <!-- 2.为echarts设置宽高 -->\r\n    <el-card class=\"box-card\"\r\n      ><div id=\"main\" style=\"width: 1200px; height: 400px\"></div\r\n    ></el-card>\r\n  </div>\r\n</template>\r\n<script>\r\n// 1.导入echarts\r\nimport echarts from \"echarts\";\r\nimport _ from 'lodash'\r\nexport default {\r\n    data(){return{\r\n        // 需要合并的数据\r\n        options: {\r\n          title: {\r\n            text: '用户来源'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'cross',\r\n              label: {\r\n                backgroundColor: '#E9EEF3'\r\n              }\r\n            }\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n          xAxis: [\r\n            {\r\n              boundaryGap: false\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              type: 'value'\r\n            }\r\n          ]\r\n        }\r\n    }},\r\n async mounted() {\r\n    // 3.基于准备好的Dom，初始化echarts实例\r\n    var myChart = echarts.init(document.getElementById(\"main\"));\r\n\r\n   const{data:res}=await this.$http.get('reports/type/1')\r\n   if(res.meta.status!==200)return this.$message.error('获取折线图数据失败')\r\n    // 4.指定图表的配置项和数据\r\n   const result = _.merge(res.data,this.options)\r\n  \r\n\r\n    // 5，使用刚指定的配置项和数据显示图表。\r\n    myChart.setOption(result);\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"]}]}